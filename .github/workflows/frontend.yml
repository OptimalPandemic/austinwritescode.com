name: frontend
on:
  push:
    branches:
      - main
defaults:
  run:
    working-directory: frontend
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: npm i
      
      - name: Build project
        run: npm run build
      
      - name: Create .env
        uses: iamsauravsharma/create-dotenv@v1.2.2
        with:
          directory: 'frontend/' # Optional (default: '.')
        env:
          VITE_CONTENTFUL_SPACE_ID: ${{ vars.VITE_CONTENTFUL_SPACE_ID }}
          VITE_CONTENTFUL_ACCESS_TOKEN: ${{ vars.VITE_CONTENTFUL_ACCESS_TOKEN }}
      
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vite-files
          path: |
            frontend/dist/
            frontend/Dockerfile
            frontend/nginx.conf
            frontend/.env
          if-no-files-found: error
  publish:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: vite-files
          path: frontend/

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_REGISTRY_TOKEN }}

      - name: set lower case owner name
        run: |
          echo "OWNER_LC=${OWNER,,}" >>${GITHUB_ENV}
        env:
          OWNER: '${{ github.repository_owner }}'

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v3
        with:
          context: ./frontend/
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ env.OWNER_LC }}/${{ github.event.repository.name }}-frontend:latest
  deploy:
    runs-on: ubuntu-latest
    needs: publish
    steps:
      - name: Run script
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_KEY }}
          port: ${{ secrets.PORT }}
          script: |
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker pull ghcr.io/optimalpandemic/${{ github.event.repository.name }}-frontend:latest
            docker kill austinwritescode.com-frontend
            docker rm austinwritescode.com-frontend
            docker run -d -p 8080:80 --name austinwritescode.com-frontend ghcr.io/optimalpandemic/${{ github.event.repository.name }}-frontend